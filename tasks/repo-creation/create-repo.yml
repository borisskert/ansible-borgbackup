---
- name: Determine if a repo exists
    (if this tasks hangs, you maybe have ssh connection issues
    like unknown hosts or missing authentication keys)
  shell: |
    set -o pipefail
    {% if borgbackup_no_strict_host_key_checking | bool %}
    export BORG_RSH="ssh -oStrictHostKeyChecking=no"
    {% endif %}
    {% if item.encryption_passphrase is defined
      and item.encryption_passphrase | length > 0 %}
    export BORG_PASSPHRASE="{{ item.encryption_passphrase }}"
    {% endif %}
    borg info "{{ item.repo_path }}"
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: repo_info

- name: Read repo existence variable
  set_fact:
    repo_exists: "{{ repo_info.rc == 0 }}"

- name: Init repo
  shell: |
    set -o pipefail
    {% if borgbackup_no_strict_host_key_checking | bool %}
    export BORG_RSH="ssh -oStrictHostKeyChecking=no"
    {% endif %}
    {% if item.encryption_passphrase is defined
      and item.encryption_passphrase | length > 0 %}
    export BORG_PASSPHRASE="{{ item.encryption_passphrase }}"
    borg init --encryption {{ item.encryption_mode }} "{{ item.repo_path }}"
    {% else %}
    borg init --encryption none "{{ item.repo_path }}"
    {% endif %}
  args:
    executable: /bin/bash
  when: not (repo_exists | bool)
  register: create_repo
  failed_when: not (borgbackup_ignore_failing_repos | bool)
    and create_repo.rc != 0
  changed_when: create_repo.rc == 0

- name: Read if repo creation is failed into variable
  set_fact:
    repo_creation_failed: "{{ not (repo_exists | bool)
      and not (create_repo.changed | bool) }}"

- name: Collect failed_repo
  set_fact:
    failed_repos: "{{ failed_repos + [item] }}"
  when: repo_creation_failed | bool
